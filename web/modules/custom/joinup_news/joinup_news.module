<?php

/**
 * @file
 * Contains joinup_news.module.
 */

use \Drupal\Core\Entity\EntityTypeInterface;
use \Drupal\Core\Entity\EntityInterface;
use \Drupal\Core\Form\FormStateInterface;
use \Drupal\node\NodeInterface;
use \Drupal\Core\Session\AccountInterface;
use \Drupal\Core\Access\AccessResult;

/**
 * Implements hook_entity_bundle_field_info_alter().
 */
function joinup_news_entity_bundle_field_info_alter(&$fields, EntityTypeInterface $entity_type, $bundle) {
  // @todo Add test coverage for these constraints.
  // @see https://webgate.ec.europa.eu/CITnet/jira/browse/ISAICP-2500
  if ($entity_type->id() == 'node' && $bundle == 'news') {
    if (!empty($fields['field_news_short_title'])) {
      $fields['field_news_short_title']->addConstraint('UniqueField');
    }
    if (!empty($fields['title'])) {
      $fields['title']->addConstraint('UniqueFieldInBundle', ['bundles' => ['news']]);
    }
  }
}

/**
 * Implements hook_node_access().
 *
 * Interrupts the permissions for updating a node. The permission is not
 * granted if there are no transitions allowed for the current state of the
 * node.
 */
function joinup_news_node_access(EntityInterface $node, $op, AccountInterface $account) {
  if ($op != 'update' || $node->bundle() != 'news') {
    return AccessResult::neutral();
  }

  $allowed_transitions = $node->get('field_news_state')->first()->getTransitions();
  if (empty($allowed_transitions)) {
    // @todo: Add also cacheability per user permission.
    return AccessResult::forbidden()->addCacheableDependency($node);
  }
  return AccessResult::neutral();
}

/**
 * Implements hook_ENTITY_TYPE_presave().
 */
function joinup_news_node_presave(EntityInterface $entity) {
  if ($entity->bundle() != 'news') {
    return;
  }

  $state = $entity->field_news_state->first()->value;
  if (empty($state)) {
    return;
  }

  if (in_array($state, ['draft', 'proposed'])) {
    $entity->setPublished(FALSE);
  }
  elseif (in_array($state, ['validated', 'in_assessment', 'deletion_request'])) {
    $entity->setPublished(TRUE);
  }
}

/**
 * Implements hook_field_widget_WIDGET_TYPE_form_alter().
 *
 * @see \Drupal\state_machine\Plugin\Field\FieldType\StateItem::getAllowedStates
 */
function joinup_news_field_widget_form_alter(&$element, FormStateInterface $form_state, $context) {
  $fieldType = $context['items']->getFieldDefinition()->getType();
  if ($fieldType != 'state' || empty($form_state->getBuildInfo()['callback_object'])) {
    return;
  }
  $entity = $form_state->getBuildInfo()['callback_object']->getEntity();
  // We do not apply this check if we are creating an entity.
  if (!($entity instanceof NodeInterface) || $entity->bundle() != 'news' || $entity->isNew()) {
    return;
  }

  $default_value = reset($element['#default_value']);
  $allowed_transitions = $entity->get('field_news_state')->first()->getTransitions();
  if (!in_array($default_value, array_keys($allowed_transitions))) {
    unset($element['#options'][$default_value], $element['#default_value']);
  }
}
