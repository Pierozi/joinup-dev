<?php

/**
 * @file
 * Contains joinup_news.module.
 */

use \Drupal\Core\Entity\EntityTypeInterface;
use \Drupal\node\NodeInterface;
use \Drupal\Core\Session\AccountInterface;
use \Drupal\Core\Access\AccessResult;

/**
 * Implements hook_entity_bundle_field_info_alter().
 */
function joinup_news_entity_bundle_field_info_alter(&$fields, EntityTypeInterface $entity_type, $bundle) {
  // @todo Add test coverage for these constraints.
  // @see https://webgate.ec.europa.eu/CITnet/jira/browse/ISAICP-2500
  if ($entity_type->id() == 'node' && $bundle == 'news') {
    if (!empty($fields['field_news_short_title'])) {
      $fields['field_news_short_title']->addConstraint('UniqueField');
    }
    if (!empty($fields['title'])) {
      $fields['title']->addConstraint('UniqueFieldInBundle', ['bundles' => ['news']]);
    }
  }
}

/**
 * Implements hook_node_access().
 *
 * Interrupts the permissions for updating a node. The permission is not
 * granted if there are no transitions allowed for the current state of the
 * node.
 */
function joinup_news_node_access(NodeInterface $node, $op, AccountInterface $account) {
  if ($op != 'update' || $node->bundle() != 'news') {
    return AccessResult::neutral();
  }

  $allowed_transitions = $node->get('field_news_state')->first()->getTransitions();
  if (empty($allowed_transitions)) {
    // @todo: Add also cacheability per user permission.
    return AccessResult::forbidden()->addCacheableDependency($node);
  }
  return AccessResult::neutral();
}
